{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MainService {\n  constructor(http) {\n    this.http = http;\n    this._loading$ = new BehaviorSubject(false);\n  }\n  get loading$() {\n    return this._loading$.asObservable();\n  }\n  getUser() {\n    return this.http.get(`${environment.apiUrl}/user?search=Kevin`);\n  }\n}\nMainService.ɵfac = function MainService_Factory(t) {\n  return new (t || MainService)(i0.ɵɵinject(i1.HttpClient));\n};\nMainService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MainService,\n  factory: MainService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,0CAA0C;AACtE,SAASC,eAAe,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAChB,cAAS,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EADf;EAExC,IAAII,QAAQ;IACV,OAAO,IAAI,CAACC,SAAS,CAACC,YAAY,EAAE;EACtC;EACAC,OAAO;IACL,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAc,GAAGT,WAAW,CAACU,MAAM,oBAAoB,CAAC;EAC9E;;AATWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["environment","BehaviorSubject","MainService","constructor","http","loading$","_loading$","asObservable","getUser","get","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\main\\services\\main.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserModel } from '../models/user.model';\nimport { environment } from 'src/environments/environment.development';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private http: HttpClient) { }\n  private _loading$ = new BehaviorSubject<boolean>(false);\n  get loading$():Observable<boolean>{\n    return this._loading$.asObservable();\n  }\n  getUser(){\n    return this.http.get<UserModel[]>(`${environment.apiUrl}/user?search=Kevin`)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}