{"ast":null,"code":"import { tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  onLogin(email, password) {\n    console.log(environment.apiUrl);\n    return this.http.post(`${environment.apiUrl}/user/login`, {\n      email,\n      password\n    }).pipe(tap(res => {\n      console.log(res);\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;AAC1B,SAASC,WAAW,QAAQ,0CAA0C;;;AAItE,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,OAAO,CAACC,KAAa,EAAEC,QAAgB;IACrCC,OAAO,CAACC,GAAG,CAACR,WAAW,CAACS,MAAM,CAAC;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAGV,WAAW,CAACS,MAAM,aAAa,EAAC;MAACJ,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAACK,IAAI,CAC9EZ,GAAG,CAAEa,GAAQ,IAAI;MACfL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAClB,CAAC,CAAC,CACH;EACH;;AAXWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["tap","environment","AuthService","constructor","http","onLogin","email","password","console","log","apiUrl","post","pipe","res","factory","providedIn"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\auth\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(email: string, password: string) {\n    console.log(environment.apiUrl)\n    return this.http.post(`${environment.apiUrl}/user/login`,{email, password}).pipe(\n      tap((res: any) => {\n        console.log(res)\n      })\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}