{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.getToken()) {\n      console.log(this.authService.getToken());\n      return true;\n    } else {\n      this.router.navigateByUrl('/auth/login');\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACxB;EACFC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAE,EAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAACK,QAAQ,EAAE,CAAC;MACxC,OAAO,IAAI;KACZ,MACG;MACF,IAAI,CAACJ,MAAM,CAACO,aAAa,CAAC,aAAa,CAAC;MACxC,OAAO,KAAK;;EAElB;;AAfWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","getToken","console","log","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\core\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/auth/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService,\n              private router: Router\n  ){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if(this.authService.getToken()){\n        console.log(this.authService.getToken())\n        return true\n      }\n      else{\n        this.router.navigateByUrl('/auth/login')\n        return false\n      }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}