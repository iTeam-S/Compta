{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.hide = true;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]]\n    });\n  }\n  ngOnInit() {}\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    this.authService.onLogin(this.loginForm.value.email, this.loginForm.value.password).subscribe(res => {\n      console.log(res);\n    });\n  }\n  register() {\n    this.router.navigateByUrl('auth/register');\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 29,\n  vars: 7,\n  consts: [[1, \"header\"], [\"name\", \"loginForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"emailInput\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"Enter email address\", \"required\", \"\"], [4, \"ngIf\"], [\"routerLink\", \"/auth/forgot-password\", 1, \"aLink\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"primary\"], [1, \"button-row\"], [3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"div\", 0)(3, \"P\");\n      i0.ɵɵtext(4, \"Sign Into Your Account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"mat-form-field\", 3)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\")(13, \"span\")(14, \"a\", 6);\n      i0.ɵɵtext(15, \"Forgot Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 3)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 7);\n      i0.ɵɵelementStart(20, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(21, \"mat-icon\");\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(23, LoginComponent_mat_error_23_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 9);\n      i0.ɵɵtext(25, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"p\", 11);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_p_click_27_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(28, \"Create New Account\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"email\"].valid);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.hide ? \"visibility\" : \"visibility_off\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"password\"].valid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i5.MatCard, i5.MatCardContent, i6.MatButton, i6.MatIconButton, i7.MatIcon, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatInput, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 2em auto;\\n  text-align: center;\\n  max-height: 600px;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 80%;\\n}\\n\\n.button-row[_ngcontent-%COMP%] {\\n  padding-top: 5px;\\n  cursor: pointer;\\n}\\n\\n.button-row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  text-align: center;\\n}\\n\\n.forget-password[_ngcontent-%COMP%] {\\n  padding-left: 0px;\\n}\\n\\n.emailInput[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.contentBody[_ngcontent-%COMP%] {\\n  padding: 60px 1rem;\\n  background: #1b6ca8;\\n  display: block;\\n}\\n\\n.aLink[_ngcontent-%COMP%] {\\n  float: right;\\n  padding-right: 60px;\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtFQUNBLHFCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA2MDBweDtcclxuICBtYXJnaW46IDJlbSBhdXRvO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXgtaGVpZ2h0OiA2MDBweDtcclxufVxyXG5cclxuLmhlYWRlcntcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG59XHJcbi5mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogODAlO1xyXG59XHJcblxyXG4uYnV0dG9uLXJvdyB7XHJcbiAgcGFkZGluZy10b3A6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5idXR0b24tcm93IGEge1xyXG4gIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmZvcmdldC1wYXNzd29yZHtcclxuICBwYWRkaW5nLWxlZnQ6IDBweDtcclxufVxyXG5cclxuLmVtYWlsSW5wdXR7XHJcbiAgcGFkZGluZy10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5jb250ZW50Qm9keSB7XHJcbiAgcGFkZGluZzogNjBweCAxcmVtO1xyXG4gIGJhY2tncm91bmQgOiMxYjZjYTg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5hTGlua3tcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgcGFkZGluZy1yaWdodDogNjBweDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;ICavDC,iCAAsD;IAClDA,mCACF;IAAAA,iBAAY;;;;;IAiBlBA,iCAAyD;IACrDA,sCACF;IAAAA,iBAAY;;;ADzBtB,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe,EAAUC,MAAc,EAAUC,WAAwB;IAAzE,OAAE,GAAFF,EAAE;IAAuB,WAAM,GAANC,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAFhF,SAAI,GAAY,IAAI;IAQpB,cAAS,GAAc,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EARF;EAEAC,QAAQ,IACR;EAQAC,OAAO;IACL,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,EAAE;MACzB;;IAEF,IAAI,CAACT,WAAW,CAACO,OAAO,CAAC,IAAI,CAACC,SAAS,CAACE,KAAK,CAACR,KAAK,EAAE,IAAI,CAACM,SAAS,CAACE,KAAK,CAACN,QAAQ,CAAC,CAACO,SAAS,CAACC,GAAG,IAAG;MAClGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;EACAG,QAAQ;IACN,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,eAAe,CAAC;EAC5C;;AAzBWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3B1B,gCAAU;MAGCA,sCAAsB;MAAAA,iBAAI;MAE/BA,+BAAsE;MAAhEA;QAAA,OAAY2B,aAAS;MAAA,EAAC;MAC1B3B,8BAAwB;MAETA,qBAAK;MAAAA,iBAAY;MAC5BA,4BAIE;MACFA,6EAEc;MAChBA,iBAAiB;MAGnBA,4BAAK;MAEqEA,iCAAgB;MAAAA,iBAAI;MAE5FA,0CAAwD;MAC3CA,yBAAQ;MAAAA,iBAAY;MAC/BA,4BAA2F;MAC3FA,kCAC2B;MADQA;QAAA;MAAA,EAAsB;MAEzDA,iCAAU;MACNA,aACJ;MAAAA,iBAAW;MAEfA,6EAEc;MACdA,iBAAiB;MAEjBA,kCAAwC;MAAAA,sBAAK;MAAAA,iBAAS;MAGxDA,gCAAwB;MACnBA;QAAA,OAAS2B,cAAU;MAAA,EAAC;MAAC3B,mCAAkB;MAAAA,iBAAI;;;MArCFA,eAAuB;MAAvBA,yCAAuB;MASnDA,eAAwC;MAAxCA,6DAAwC;MAYTA,eAAoC;MAApCA,qDAAoC;MACrBA,eAAmC;MAAnCA,6CAAmC;MAGzFA,eACJ;MADIA,2EACJ;MAEQA,eAA2C;MAA3CA,gEAA2C","names":["Validators","i0","LoginComponent","constructor","fb","router","authService","group","email","required","password","minLength","ngOnInit","onLogin","loginForm","valid","value","subscribe","res","console","log","register","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\auth\\components\\login\\login.component.ts","D:\\iTeam-$\\compta-app\\src\\app\\auth\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide: boolean = true;\n\n  constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\n  }\n\n  ngOnInit() {\n  }\n\n  loginForm: FormGroup = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(4)]]\n  })\n\n\n  onLogin() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    this.authService.onLogin(this.loginForm.value.email, this.loginForm.value.password).subscribe(res => {\n      console.log(res)\n    })\n  }\n  register(){\n    this.router.navigateByUrl('auth/register')\n  }\n}\n","<mat-card>\n    <mat-card-content>\n      <div class=\"header\">\n        <P>Sign Into Your Account</P>\n      </div>\n      <form (ngSubmit)=\"onLogin()\" name=\"loginForm\" [formGroup]=\"loginForm\">\n        <div class=\"emailInput\">\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input\n              formControlName=\"email\"\n              matInput\n              placeholder=\"Enter email address\" required\n            />\n            <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\n                Email is required\n              </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div>\n          <span>\n            <a class=\"text-link\" class=\"aLink\" routerLink=\"/auth/forgot-password\">Forgot Password?</a>\n          </span>\n          <mat-form-field class=\"full-width\" appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n            <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n            [attr.aria-pressed]=\"hide\">\n            <mat-icon>\n                {{hide ? 'visibility' :'visibility_off'}}\n            </mat-icon>\n        </button>\n        <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\n            Password is required\n          </mat-error>\n        </mat-form-field>\n        </div>\n        <button mat-flat-button color=\"primary\">Login</button>\n      </form>\n\n      <div class=\"button-row\">\n        <p (click)=\"register()\">Create New Account</p>\n      </div>\n    </mat-card-content>\n  </mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}