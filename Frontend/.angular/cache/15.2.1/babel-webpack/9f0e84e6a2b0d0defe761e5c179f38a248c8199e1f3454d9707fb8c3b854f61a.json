{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  onRegister(name, email, password, role) {\n    return this.http.post(`${environment.apiUrl}/user`, {\n      name,\n      email,\n      password,\n      role\n    }).subscribe(res => {\n      console.log(res);\n      sessionStorage.setItem('token', res.token);\n    });\n  }\n  onLogin(email, password) {\n    return this.http.post(`${environment.apiUrl}/user/login`, {\n      email,\n      password\n    }).subscribe(res => {\n      console.log(res);\n      sessionStorage.setItem('token', res.token);\n    });\n  }\n  getToken() {\n    return sessionStorage.getItem('token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,0CAA0C;;;AAOtE,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACxCC,UAAU,CAACC,IAAY,EAAEC,KAAa,EAAEC,QAAgB,EAAEC,IAAY;IACpE,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,GAAGT,WAAW,CAACU,MAAM,OAAO,EAAC;MAACL,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC;IAAI,CAAC,CAAC,CAACG,SAAS,CAC/FC,GAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEJ,GAAG,CAACK,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EACAC,OAAO,CAACZ,KAAa,EAAEC,QAAgB;IACrC,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAO,GAAGT,WAAW,CAACU,MAAM,aAAa,EAAC;MAACJ,KAAK;MAAEC;IAAQ,CAAC,CAAC,CAACI,SAAS,CACxFC,GAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEJ,GAAG,CAACK,KAAK,CAAC;IAC5C,CAAC,CACF;EACH;EACAE,QAAQ;IACN,OAAOJ,cAAc,CAACK,OAAO,CAAC,OAAO,CAAC;EACxC;;AArBWnB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["environment","AuthService","constructor","http","onRegister","name","email","password","role","post","apiUrl","subscribe","res","console","log","sessionStorage","setItem","token","onLogin","getToken","getItem","factory","providedIn"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\auth\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { User } from '../models/login-form-value.model';\nimport { Users } from '../models/register-form-value.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n  onRegister(name: string, email: string, password: string, role: string) {\n    return this.http.post<Users>(`${environment.apiUrl}/user`,{name, email, password, role}).subscribe(\n      (res: any) => {\n        console.log(res)\n        sessionStorage.setItem('token', res.token)\n      }\n    )\n  }\n  onLogin(email: string, password: string) {\n    return this.http.post<User>(`${environment.apiUrl}/user/login`,{email, password}).subscribe(\n      (res: any) => {\n        console.log(res)\n        sessionStorage.setItem('token', res.token)\n      }\n    )\n  }\n  getToken():string{\n    return sessionStorage.getItem('token')\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}