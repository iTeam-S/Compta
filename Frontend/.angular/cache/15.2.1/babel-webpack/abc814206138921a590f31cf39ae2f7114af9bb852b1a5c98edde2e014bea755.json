{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction RegisterComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const food_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", food_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", food_r5.viewValue, \" \");\n  }\n}\nfunction RegisterComponent_mat_error_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Role is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.hide = true;\n    this.role = '';\n    this.foods = [{\n      value: '',\n      viewValue: '--'\n    }, {\n      value: 'admin',\n      viewValue: 'Admin'\n    }, {\n      value: 'user',\n      viewValue: 'User'\n    }];\n    this.loginForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(4)]],\n      role: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  ngOnInit() {}\n  onRegister() {\n    if (!this.loginForm.valid && this.role === '') {\n      return;\n    }\n    console.log({\n      name: this.loginForm.value.name,\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password,\n      role: this.role\n    });\n  }\n  login() {\n    this.router.navigateByUrl('auth/register');\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 39,\n  vars: 11,\n  consts: [[1, \"header\"], [\"name\", \"loginForm\", 3, \"formGroup\", \"ngSubmit\"], [1, \"nameInput\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"formControlName\", \"name\", \"matInput\", \"\", \"placeholder\", \"Enter your name\", \"required\", \"\"], [4, \"ngIf\"], [1, \"emailInput\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"Enter email address\", \"required\", \"\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [1, \"roleInput\"], [\"appearance\", \"fill\"], [3, \"value\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\"], [1, \"button-row\"], [3, \"click\"], [3, \"value\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-content\")(2, \"div\", 0)(3, \"P\");\n      i0.ɵɵtext(4, \"Create New Account\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.onRegister();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"mat-form-field\", 3)(8, \"mat-label\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵtemplate(11, RegisterComponent_mat_error_11_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"mat-form-field\", 3)(14, \"mat-label\");\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 7);\n      i0.ɵɵtemplate(17, RegisterComponent_mat_error_17_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\")(19, \"mat-form-field\", 3)(20, \"mat-label\");\n      i0.ɵɵtext(21, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 8);\n      i0.ɵɵelementStart(23, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_23_listener() {\n        return ctx.hide = !ctx.hide;\n      });\n      i0.ɵɵelementStart(24, \"mat-icon\");\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(26, RegisterComponent_mat_error_26_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 10)(28, \"mat-form-field\", 11)(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Favorite food\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"mat-select\", 12);\n      i0.ɵɵlistener(\"valueChange\", function RegisterComponent_Template_mat_select_valueChange_31_listener($event) {\n        return ctx.role = $event;\n      });\n      i0.ɵɵtemplate(32, RegisterComponent_mat_option_32_Template, 2, 2, \"mat-option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, RegisterComponent_mat_error_33_Template, 2, 0, \"mat-error\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"button\", 14);\n      i0.ɵɵtext(35, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 15)(37, \"p\", 16);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_p_click_37_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(38, \"Log in\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"name\"].valid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"email\"].valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-label\", \"Hide Password\")(\"aria-pressed\", ctx.hide);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.hide ? \"visibility\" : \"visibility_off\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"password\"].valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", ctx.role);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.foods);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.controls[\"role\"].valid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.MatCard, i5.MatCardContent, i6.MatButton, i6.MatIconButton, i7.MatIcon, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatInput, i10.MatSelect, i11.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"mat-card[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 2em auto;\\n  text-align: center;\\n  max-height: 600px;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 80%;\\n}\\n\\n.button-row[_ngcontent-%COMP%] {\\n  padding-top: 5px;\\n  cursor: pointer;\\n}\\n\\n.button-row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  text-align: center;\\n}\\n\\n.forget-password[_ngcontent-%COMP%] {\\n  padding-left: 0px;\\n}\\n\\n.emailInput[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.nameInput[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.roleInput[_ngcontent-%COMP%] {\\n  padding-top: 10px;\\n}\\n\\n.contentBody[_ngcontent-%COMP%] {\\n  padding: 60px 1rem;\\n  background: #1b6ca8;\\n  display: block;\\n}\\n\\n.aLink[_ngcontent-%COMP%] {\\n  float: right;\\n  padding-right: 60px;\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9jb21wb25lbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIHtcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gIG1hcmdpbjogMmVtIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xyXG59XHJcblxyXG4uaGVhZGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbn1cclxuLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiA4MCU7XHJcbn1cclxuXHJcbi5idXR0b24tcm93IHtcclxuICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmJ1dHRvbi1yb3cgYSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uZm9yZ2V0LXBhc3N3b3Jke1xyXG4gIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG4uZW1haWxJbnB1dHtcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG5cclxuLm5hbWVJbnB1dHtcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG5cclxuLnJvbGVJbnB1dHtcclxuICBwYWRkaW5nLXRvcDogMTBweDtcclxufVxyXG5cclxuLmNvbnRlbnRCb2R5IHtcclxuICBwYWRkaW5nOiA2MHB4IDFyZW07XHJcbiAgYmFja2dyb3VuZCA6IzFiNmNhODtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmFMaW5re1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBwYWRkaW5nLXJpZ2h0OiA2MHB4O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","fb","router","authService","value","viewValue","group","name","required","minLength","email","password","role","ngOnInit","onRegister","loginForm","valid","console","log","login","navigateByUrl","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\iTeam-$\\compta-app\\src\\app\\auth\\components\\register\\register.component.ts","D:\\iTeam-$\\compta-app\\src\\app\\auth\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit{\n  hide: boolean = true;\n  role: string = '';\n  foods: Food[] = [\n    {value: '', viewValue: '--'},\n    {value: 'admin', viewValue: 'Admin'},\n    {value: 'user', viewValue: 'User'},\n  ];\n  constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  loginForm: FormGroup = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(3)]],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(4)]],\n    role: ['', [Validators.required, Validators.minLength(3)]]\n  })\n\n\n  onRegister() {\n    if (!this.loginForm.valid && this.role === '') {\n      return;\n    }\n    console.log({\n      name: this.loginForm.value.name,\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password,\n      role: this.role\n    });\n  }\n  login(){\n    this.router.navigateByUrl('auth/register')\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <div class=\"header\">\n      <P>Create New Account</P>\n    </div>\n    <form (ngSubmit)=\"onRegister()\" name=\"loginForm\" [formGroup]=\"loginForm\">\n      <div class=\"nameInput\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>Name</mat-label>\n          <input\n            formControlName=\"name\"\n            matInput\n            placeholder=\"Enter your name\" required\n          />\n          <mat-error *ngIf=\"!loginForm.controls['name'].valid\">\n              Name is required\n            </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"emailInput\">\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input\n            formControlName=\"email\"\n            matInput\n            placeholder=\"Enter email address\" required\n          />\n          <mat-error *ngIf=\"!loginForm.controls['email'].valid\">\n              Email is required\n            </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div>\n        <mat-form-field class=\"full-width\" appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input formControlName=\"password\" matInput [type]=\" hide ? 'password' : 'text'\" required />\n          <button  mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide Password'\"\n          [attr.aria-pressed]=\"hide\">\n          <mat-icon>\n              {{hide ? 'visibility' :'visibility_off'}}\n          </mat-icon>\n      </button>\n      <mat-error *ngIf=\"!loginForm.controls['password'].valid\">\n          Password is required\n        </mat-error>\n      </mat-form-field>\n      </div>\n\n      <div class=\"roleInput\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Favorite food</mat-label>\n          <mat-select [(value)]=\"role\">\n            <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n              {{food.viewValue}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!loginForm.controls['role'].valid\">\n            Role is required\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <button mat-flat-button color=\"primary\">Register</button>\n    </form>\n\n    <div class=\"button-row\">\n      <p (click)=\"login()\">Log in</p>\n    </div>\n  </mat-card-content>\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}